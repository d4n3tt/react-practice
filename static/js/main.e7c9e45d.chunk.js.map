{"version":3,"sources":["components/Header.js","components/Footer.js","pages/Home.js","pages/Page1.js","pages/Page2.js","shared/App.js","client/Root.js","serviceWorker.js","index.js"],"names":["HeaderStyle","fontFamily","position","top","left","width","backgroundColor","color","boxShadow","HeaderContentStyle","flexDirection","textAlign","padding","LogoStyle","fontSize","fontWeight","LinkStyle","marginTop","Header","className","style","to","activeClassName","height","background","FooterStyle","bottom","Footer","Home","Component","Page1","Page2","App","exact","path","component","Root","basename","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e7c9e45d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\" style={HeaderStyle}>\r\n            <span style={HeaderContentStyle}>\r\n                <div style={LogoStyle}>LOGO</div>\r\n                <div style={LinkStyle}>\r\n                    <NavLink to=\"Home\" className=\"aLink\" activeClassName=\"activeLink\">HOME</NavLink>\r\n                    <NavLink to=\"Page1\" className=\"aLink\" activeClassName=\"activeLink\">PAGE1</NavLink>\r\n                    <NavLink to=\"Page2\" className=\"aLink\" activeClassName=\"activeLink\">PAGE2</NavLink>\r\n                </div>\r\n            </span>\r\n            <div style={{height: \"2px\", background: \"linear-gradient(to right, palevioletred, mediumpurple)\"}}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst HeaderStyle = {\r\n    fontFamily: 'nanumsquare',\r\n    position: \"fixed\",\r\n    top: \"0px\",\r\n    left: \"0px\",\r\n    width: \"100%\",\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    boxShadow: \"0 5px 5px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)\"\r\n}\r\n\r\nconst HeaderContentStyle = {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    textAlign: \"center\",\r\n    padding: \"0.3rem 5rem\"\r\n}\r\n\r\nconst LogoStyle = {\r\n    fontFamily: 'nanumsquare',\r\n    fontSize: \"2.0rem\",\r\n    fontWeight:\"700\",\r\n    color: \"palevioletred\"\r\n}\r\n\r\nconst LinkStyle = {\r\n    marginTop: \"1.0rem\",\r\n    fontSize: \"1.3rem\",\r\n    fontWeight:\"400\",\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\" style={FooterStyle}>\r\n            <span style={{}}> Copyirght ©d4n3tt all rights reserved. </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst FooterStyle = {\r\n    position: \"fixed\",\r\n    bottom: \"0px\",\r\n    width: \"100%\",\r\n    backgroundColor:\"lightgray\",\r\n    color:\"black\",\r\n    textAlign:\"center\",\r\n    fontSize:\"0.8rem\",\r\n    padding: \"0.2rem\"\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return (\r\n        <div style={{padding: \"3rem 1rem\", fontFamily: 'nanumsquare'}}>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n            <h1>홈</h1>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Page1 extends Component{\r\n    render(){\r\n        return (\r\n        <div style={{padding: \"3rem 1rem\", fontFamily: 'nanumsquare'}}>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n            <h1>샘플</h1>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page1;","import React, { Component } from 'react';\r\n\r\nclass Page2 extends Component{\r\n    render(){\r\n        return (\r\n        <div style={{padding: \"3rem 1rem\", fontFamily: 'nanumsquare'}}>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n            <h1>샘플2</h1>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page2;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { Home, Page1, Page2 } from '../pages';\nimport './App.css';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Header/>\n                <div>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route exact path=\"/Home\" component={Home}/>\n                    <Route exact path=\"/Page1\" component={Page1}/>\n                    <Route exact path=\"/Page2\" component={Page2}/>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from '../shared/App';\r\n\r\nconst Root = () => (\r\n    <HashRouter basename=\"/react-practice\">\r\n        <App/>\r\n    </HashRouter>\r\n);\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './client/Root';\r\nimport { Router, Route, hashHistory, IndexRoute } from 'react-router';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\nserviceWorker.register();"],"sourceRoot":""}